{
	"build_tools": {
		"checkCommand": "msbuild -version",
		"versionRegex": "\\d+\\.\\d+\\.\\d+",
		"installCommand": {
			"windows": "winget install --id Microsoft.VisualStudio.2022.BuildTools --silent --accept-package-agreements --accept-source-agreements --override \"--quiet --wait --norestart --nocache --installPath C:\\BuildTools --add Microsoft.VisualStudio.Workload.VCTools --includeRecommended\" && powershell -Command \"[Environment]::SetEnvironmentVariable('PATH', [Environment]::GetEnvironmentVariable('PATH','Machine') + ';C:\\BuildTools\\MSBuild\\Current\\Bin', 'Machine')\""
		},
		"uninstallCommand": {
			"windows": "winget uninstall --id Microsoft.VisualStudio.2022.BuildTools --silent"
		},
		"shouldRestart": true
	},
	"python": {
		"checkCommand": "python --version",
		"versionRegex": "Python (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "curl -o python-installer.exe https://www.python.org/ftp/python/3.10.7/python-3.10.7-amd64.exe && python-installer.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0",
			"linux": "sudo apt update && sudo apt install -y python3 python3-pip",
			"macos": "brew install python"
		},
		"uninstallCommand": {
			"windows": "wmic product where \"name like 'Python%%'\" call uninstall /nointeractive",
			"linux": "sudo apt remove -y python3 python3-pip",
			"macos": "brew uninstall python"
		}
	},
	"uv": {
		"checkCommand": "uv --version",
		"versionRegex": "uv (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"",
			"macos": "curl -LsSf https://astral.sh/uv/install.sh | sh",
			"linux": "curl -LsSf https://astral.sh/uv/install.sh | sh"
		},
		"uninstallCommand": {
			"windows": "uv cache clean && del \"%USERPROFILE%\\.local\\bin\\uv.exe\" && del \"%USERPROFILE%\\.local\\bin\\uvx.exe\"",
			"macos": "uv cache clean && rm ~/.local/bin/uv ~/.local/bin/uvx",
			"linux": "uv cache clean && rm ~/.local/bin/uv ~/.local/bin/uvx"
		}
	},
	"conda": {
		"checkCommand": "conda --version",
		"versionRegex": "conda (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "curl -o %TEMP%\\Miniconda3.exe https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe && %TEMP%\\Miniconda3.exe /S /AddToPath=1 /D=%USERPROFILE%\\Miniconda3",
			"linux": "sudo apt install -y conda",
			"macos": "brew install conda"
		},
		"uninstallCommand": {
			"windows": "start /wait %USERPROFILE%\\Miniconda3\\Uninstall-Miniconda3.exe /S /RemoveCaches=1 /RemoveConfigFiles=user /RemoveUserData=1",
			"linux": "sudo apt remove -y conda",
			"macos": "brew uninstall conda"
		}
	},
	"ffmpeg": {
		"checkCommand": "ffmpeg -version",
		"versionRegex": "ffmpeg version (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "winget install -e --id Gyan.FFmpeg",
			"linux": "sudo apt install -y ffmpeg",
			"macos": "brew install ffmpeg"
		},
		"uninstallCommand": {
			"windows": "winget uninstall -e FFmpeg",
			"linux": "sudo apt remove -y ffmpeg",
			"macos": "brew uninstall ffmpeg"
		}
	},
	"node": {
		"checkCommand": "node --version",
		"versionRegex": "v(\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "powershell -ExecutionPolicy Bypass -Command \"iwr https://nodejs.org/dist/v20.11.1/node-v20.11.1-x64.msi -OutFile node.msi; Start-Process msiexec.exe -Wait -ArgumentList '/i node.msi /quiet'\"",
			"linux": "curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - && sudo apt install -y nodejs",
			"macos": "brew install node"
		},
		"uninstallCommand": {
			"windows": "wmic product where \"name like 'Node.js%%'\" call uninstall /nointeractive",
			"linux": "sudo apt remove -y nodejs",
			"macos": "brew uninstall node"
		}
	},
	"npm": {
		"checkCommand": "npm --version",
		"versionRegex": "(\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "npm install -g npm",
			"linux": "sudo apt install -y npm",
			"macos": "brew install npm"
		},
		"uninstallCommand": {
			"windows": "npm uninstall -g npm",
			"linux": "sudo apt remove -y npm",
			"macos": "brew uninstall npm"
		}
	},
	"pnpm": {
		"checkCommand": "pnpm --version",
		"versionRegex": "v(\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "npm install -g pnpm",
			"linux": "npm install -g pnpm",
			"macos": "npm install -g pnpm"
		},
		"uninstallCommand": {
			"windows": "npm uninstall -g pnpm",
			"linux": "npm uninstall -g pnpm",
			"macos": "npm uninstall -g pnpm"
		}
	},
	"git": {
		"checkCommand": "git --version",
		"versionRegex": "git version (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "winget install --id Git.Git -e --source winget",
			"linux": "sudo apt update && sudo apt install -y git",
			"macos": "brew install git"
		},
		"uninstallCommand": {
			"windows": "winget uninstall --id Git.Git -e",
			"linux": "sudo apt remove -y git",
			"macos": "brew uninstall git"
		}
	},
	"docker": {
		"checkCommand": "docker --version",
		"versionRegex": "Docker version (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "winget install -e --id Docker.DockerDesktop",
			"linux": "curl -fsSL https://get.docker.com | sudo sh",
			"macos": "brew install --cask docker"
		},
		"uninstallCommand": {
			"windows": "winget uninstall -e --id Docker.DockerDesktop",
			"linux": "sudo apt remove -y docker-ce docker-ce-cli containerd.io",
			"macos": "brew uninstall --cask docker"
		}
	},
	"npx": {
		"checkCommand": "npx --version",
		"versionRegex": "v(\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "npm install -g npx",
			"linux": "npm install -g npx",
			"macos": "npm install -g npx"
		},
		"uninstallCommand": {
			"windows": "npm uninstall -g npx",
			"linux": "npm uninstall -g npx",
			"macos": "npm uninstall -g npx"
		}
	},
	"yarn": {
		"checkCommand": "yarn --version",
		"versionRegex": "v(\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "npm install -g yarn",
			"linux": "npm install -g yarn",
			"macos": "brew install yarn"
		},
		"uninstallCommand": {
			"windows": "npm uninstall -g yarn",
			"linux": "npm uninstall -g yarn",
			"macos": "brew uninstall yarn"
		}
	},
	"curl": {
		"checkCommand": "curl --version",
		"versionRegex": "curl (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "winget install -e --id Curl.Curl",
			"linux": "sudo apt update && sudo apt install -y curl",
			"macos": "brew install curl"
		},
		"uninstallCommand": {
			"windows": "winget uninstall -e --id Curl.Curl",
			"linux": "sudo apt remove -y curl",
			"macos": "brew uninstall curl"
		}
	},
	"wget": {
		"checkCommand": "wget --version",
		"versionRegex": "GNU Wget (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"windows": "winget install -e --id GNU.Wget",
			"linux": "sudo apt update && sudo apt install -y wget",
			"macos": "brew install wget"
		},
		"uninstallCommand": {
			"windows": "winget uninstall -e --id GNU.Wget",
			"linux": "sudo apt remove -y wget",
			"macos": "brew uninstall wget"
		}
	},
	"unzip": {
		"checkCommand": "unzip --version",
		"versionRegex": "unzip (\\d+\\.\\d+\\.\\d+)",
		"installCommand": {
			"linux": "sudo apt update && sudo apt install -y unzip"
		},
		"uninstallCommand": {
			"linux": "sudo apt remove -y unzip"
		}
	}
}
